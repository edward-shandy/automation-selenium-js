#!/usr/bin/env node

// Generated by CoffeeScript 1.6.3
var async, childProcess, download, files, fs, path;

async = require('async');

fs = require('fs');

childProcess = require('child_process');

path = require('path');

files = require('../lib/files');

download = function(url, destination, done) {
  var command, curl;
  if (fs.existsSync(destination)) {
    return process.nextTick(done);
  } else {
    command = path.extname(url) === '.zip' ? "curl " + url + " --output " + destination + ".zip && unzip " + destination + " && rm " + destination + ".zip" : "curl " + url + " --output " + destination;
    console.log(command);
    curl = childProcess.exec(command, {
      cwd: files.binDir
    });
    curl.stdout.pipe(process.stdout);
    curl.stderr.pipe(process.stderr);
    return curl.on('exit', function(code) {
      if (code === 0) {
        return done();
      } else {
        if (code !== 0) {
          return done(new Error("'" + command + "' exited with code " + code));
        }
      }
    });
  }
};

async.series([
  download.bind(this, 'http://chromedriver.storage.googleapis.com/2.8/chromedriver_mac32.zip', files.chromedriver), download.bind(this, 'http://saucelabs.com/downloads/Sauce-Connect-latest.zip', files.sauceConnect), download.bind(this, 'http://selenium.googlecode.com/files/selenium-server-standalone-2.35.0.jar', files.seleniumServer), function() {
    var command;
    if (!fs.existsSync(files.chromedriverVerbose)) {
      command = "" + files.chromedriver + " --verbose $*";
      fs.writeFileSync(files.chromedriverVerbose, "echo \"running " + command + "\"\n" + command);
      return fs.chmodSync(files.chromedriverVerbose, 0x1ff);
    }
  }, function() {
    return console.log('successfully downloaded chromedriver binaries.');
  }
]);
